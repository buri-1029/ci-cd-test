# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Spring Boot CI/CD with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  S3_BUCKET_NAME: springboot-base

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      # Build
      - name: Build with Gradle
        run: ./gradlew clean build
        shell: bash

      # 압축파일 형태로 전달
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      # S3 버켓으로 copy
      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
          --region ap-northeast-2 \
          --acl private \
          ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/

      # Deploy
      - name: Code Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws deploy create-deployment \
          --application-name springboot-base-deploy \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name springboot-base-group \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip \
          --region ap-northeast-2
